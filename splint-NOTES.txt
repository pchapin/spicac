
The file "openssl.h" contains splint annotations for the OpenSSL library. This should be
compiled by splint using a command such as

     splint -nolib -nof openssl.h -dump openssl

The result is openssl.lcd. This library can then be loaded into later invocations of splint
using the -load option. In this way annotations for OpenSSL can be added without modifying the
OpenSSL headers. Note that the information in openssl.h is never actually seen by the compiler
so it does not need to be complete (abstract structures can be empty, for example).

The trick is to get splint to ignore the real OpenSSL headers. If it processes them it will
complain about the real definitions of the abstract structures. On my Windows box, the following
seems to actually work:

splint -I\cygwin\usr\include -sys-dirs \cygwin\usr\include;\WATCOM\H -load openssl file.c

I need to mention \WATCOM\H as a system directory because that's where my splint finds the
standard library headers (due to an environment variable setting) and I need it to ignore those
headers (that is: treat the directory as a system directory).

All in all splint is moderately confusing.

